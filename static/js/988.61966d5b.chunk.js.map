{"version":3,"file":"static/js/988.61966d5b.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/AddForm/AddForm.module.css?c4c6","components/AddForm/AddForm.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","webpack://goit-react-hw-08-phonebook/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.js","webpack://goit-react-hw-08-phonebook/./src/components/EditForm/EditForm.module.css?d1fc","components/EditForm/EditForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/ContactsPage/ContactsPage.styled.jsx","pages/ContactsPage/ContactsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"addForm\":\"AddForm_addForm__UFx-V\",\"addInput\":\"AddForm_addInput__MIZ9k\",\"addButton\":\"AddForm_addButton__9Nl7-\",\"mistake\":\"AddForm_mistake__oBR3u\"};","import PropTypes from 'prop-types';\nimport css from './AddForm.module.css';\nimport { HiPhone, HiUserAdd } from 'react-icons/hi';\nimport { MdOutlineDataSaverOn } from 'react-icons/md';\nimport { Box } from 'components/Box/Box';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nlet schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.number().required(),\n});\n\nexport function AddForm({ onFormSubmit }) {\n  const addContact = (values, { resetForm }) => {\n    onFormSubmit(values, resetForm);\n  };\n\n  return (\n    <Formik\n      onSubmit={addContact}\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={schema}\n    >\n      <Form className={css.addForm}>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Box>\n            <Box display=\"flex\" alignItems=\"center\" position=\"relative\">\n              <HiUserAdd />\n              <Field\n                className={css.addInput}\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Name\"\n              />\n              <ErrorMessage\n                component=\"div\"\n                className={css.mistake}\n                name=\"name\"\n              />\n            </Box>\n\n            <Box display=\"flex\" alignItems=\"center\" mt={3} position=\"relative\">\n              <HiPhone />\n              <Field\n                className={css.addInput}\n                type=\"tel\"\n                name=\"number\"\n                placeholder=\"number\"\n              />\n              <ErrorMessage\n                component=\"div\"\n                className={css.mistake}\n                name=\"number\"\n              />\n            </Box>\n          </Box>\n\n          <button\n            type=\"submit\"\n            className={css.addButton}\n            aria-label=\"Add contact\"\n          >\n            <MdOutlineDataSaverOn size=\"40\" fill=\"currentColor\" />\n          </button>\n        </Box>\n      </Form>\n    </Formik>\n  );\n}\n\nAddForm.propTypes = {\n  onFormSubmit: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactList_contactItem__ppNQ5\"};","// extracted by mini-css-extract-plugin\nexport default {\"contactName\":\"ContactItem_contactName__ZAMAK\",\"contactNumber\":\"ContactItem_contactNumber__Xjnxb\",\"delButton\":\"ContactItem_delButton__CkB0T\"};","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Modal_overlay__r63M6\",\"modal\":\"Modal_modal__DJDMv\"};","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport css from './Modal.module.css';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, children }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleEscape);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n    };\n  });\n\n  const handleEscape = event => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdrop = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={css.overlay} onClick={handleBackdrop}>\n      <div className={css.modal}>{children}</div>\n    </div>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"editForm\":\"EditForm_editForm__F8rjt\",\"editInput\":\"EditForm_editInput__056c9\",\"saveButton\":\"EditForm_saveButton__EKrxW\",\"mistake\":\"EditForm_mistake__mj+zr\"};","import PropTypes from 'prop-types';\nimport css from './EditForm.module.css';\nimport { HiPhone, HiUserAdd } from 'react-icons/hi';\nimport { MdSave } from 'react-icons/md';\nimport { Box } from 'components/Box/Box';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nlet schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.string().required(),\n});\n\nexport function EditForm({ onFormSubmit, nameToUpdate, numberToUpdate }) {\n  const updateContact = values => {\n    onFormSubmit(values);\n  };\n\n  return (\n    <Formik\n      onSubmit={updateContact}\n      initialValues={{\n        name: nameToUpdate,\n        number: numberToUpdate,\n      }}\n      validationSchema={schema}\n    >\n      <Form className={css.editForm}>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Box>\n            <Box display=\"flex\" alignItems=\"center\" position=\"relative\">\n              <HiUserAdd />\n              <Field\n                className={css.editInput}\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Name\"\n              />\n              <ErrorMessage\n                component=\"div\"\n                className={css.mistake}\n                name=\"name\"\n              />\n            </Box>\n\n            <Box display=\"flex\" alignItems=\"center\" mt={3} position=\"relative\">\n              <HiPhone />\n              <Field\n                className={css.editInput}\n                type=\"tel\"\n                name=\"number\"\n                placeholder=\"number\"\n              />\n              <ErrorMessage\n                component=\"div\"\n                className={css.mistake}\n                name=\"number\"\n              />\n            </Box>\n          </Box>\n\n          <button\n            type=\"submit\"\n            className={css.saveButton}\n            aria-label=\"Save contact\"\n          >\n            <MdSave size=\"40\" />\n          </button>\n        </Box>\n      </Form>\n    </Formik>\n  );\n}\n\nEditForm.propTypes = {\n  onFormSubmit: PropTypes.func,\n  nameToUpdate: PropTypes.string,\n  numberToUpdate: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport css from './ContactItem.module.css';\nimport { MdDeleteForever } from 'react-icons/md';\nimport { BsPersonCircle } from 'react-icons/bs';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport { EditForm } from 'components/EditForm/EditForm';\nimport { Box } from 'components/Box/Box';\nimport { deleteContact, updateContact } from 'redux/operations';\n\nexport function ContactItem({ id, name, number }) {\n  const [showEditForm, setShowEditForm] = useState(false);\n  const dispatch = useDispatch();\n\n  const toggleEditForm = () => {\n    setShowEditForm(!showEditForm);\n  };\n\n  const handleDelete = contactId => {\n    if (global.confirm('Delete contact?')) {\n      dispatch(deleteContact(contactId));\n    }\n  };\n\n  const handleUpdate = updatedContact => {\n    dispatch(updateContact({ id, ...updatedContact }));\n    toggleEditForm();\n  };\n\n  function getRandomHexColor() {\n    return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n  }\n\n  return (\n    <>\n      <Box width=\"100%\" display=\"flex\" onClick={toggleEditForm}>\n        <BsPersonCircle size=\"18\" color={getRandomHexColor()} />\n        <span className={css.contactName}>{name}</span>\n        <span className={css.contactNumber}>{number}</span>\n      </Box>\n\n      <button\n        type=\"button\"\n        className={css.delButton}\n        onClick={() => handleDelete(id)}\n        aria-label=\"Delete contact\"\n        // disabled={isLoading}\n      >\n        <MdDeleteForever size=\"18\" />\n      </button>\n\n      <Box position=\"absolute\" right=\"0\" top=\"0\">\n        {showEditForm && (\n          <Modal onClose={toggleEditForm}>\n            <EditForm\n              onFormSubmit={handleUpdate}\n              nameToUpdate={name}\n              numberToUpdate={number}\n            />\n          </Modal>\n        )}\n      </Box>\n    </>\n  );\n}\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\n\nexport function ContactList({ contacts }) {\n  return (\n    <ul>\n      {contacts\n        .sort((a, b) => a.name.localeCompare(b.name))\n        .map(({ id, name, number }) => (\n          <li key={id} className={css.contactItem}>\n            <ContactItem id={id} name={name} number={number} />\n          </li>\n        ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"Filter_filterInput__1Cysk\"};","import PropTypes from 'prop-types';\nimport css from './Filter.module.css';\nimport { Box } from 'components/Box/Box';\n\nexport function Filter({ value, onChange }) {\n  return (\n    <Box p={2}>\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n        placeholder=\"Find contact by name\"\n      />\n    </Box>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  cursor: pointer;\n  /* width: 100%; */\n  padding: 4px ;\n  font-size: 14px;\n  font-weight: 600;\n  border-radius: 4px;\n  border: none;\n  /* margin: 0 auto; */\n  background-color: #fcd535;\n  transition: background-color 250ms linear;\n\n  :hover,:focus {\n    background-color: #ffcc00;\n  }\n\n\n  :focus-visible {\n    outline: none;\n  }\n`;","import { Box } from 'components/Box/Box';\nimport { AddForm } from 'components/AddForm/AddForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { filterChange } from 'redux/store';\n// import { useGetContactsQuery, useAddContactMutation } from 'services/api';\nimport { logout } from 'redux/operations';\nimport { getContacts, addContact } from 'redux/operations';\nimport { Button } from './ContactsPage.styled';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter.filter);\n  const statePhonebook = useSelector(state => state.phonebook);\n  const userName = useSelector(state => state.auth.user.name);\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n\n  const contacts = isLoggedIn ? statePhonebook : [];\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  // dispatch(getContacts());\n  // const { data: contacts, error, isLoading } = useGetContactsQuery();\n  // const [addContact] = useAddContactMutation();\n\n  const handleAdd = async (newContact, resetForm) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n      )\n    ) {\n      alert(` ${newContact.name} is already in contacts.`);\n      return;\n    }\n    // try {\n    //   // await addContact(newContact);\n    // } catch (error) {\n    //   alert(error);\n    // } finally {\n    //   resetForm();\n    // }\n    dispatch(addContact(newContact));\n    resetForm();\n  };\n\n  const handleFilter = event => {\n    dispatch(filterChange(event.currentTarget.value));\n  };\n\n  const filteredContacts = contacts\n    ? contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      )\n    : '';\n\n  return (\n    <>\n      {!isLoggedIn && <Navigate to=\"/\" />}\n\n      <Box width=\"320px\" mx=\"auto\" position=\"relative\">\n        <Box px={2} pb={2} display=\"flex\" justifyContent=\"space-between\">\n          <h4>Welcome, {userName}</h4>\n          <Button type=\"button\" onClick={() => dispatch(logout())}>\n            Logout\n          </Button>\n        </Box>\n\n        <AddForm onFormSubmit={handleAdd} />\n\n        <Box\n          py={2}\n          mt={2}\n          border=\"1px solid #212121\"\n          borderRadius={3}\n          boxShadow=\"0px 4px 8px rgba(0, 0, 0, 0.8)\"\n          backgroundColor=\"white\"\n        >\n          <Filter value={filter} onChange={handleFilter} />\n\n          {/* {error && (\n            <p>Sorry, there is some error. Please try to reload page...</p>\n          )}\n\n          {isLoading ? (\n            'Loading...'\n          ) : (\n            <ContactList contacts={filteredContacts ?? []} />\n          )} */}\n\n          <ContactList contacts={filteredContacts ?? []} />\n        </Box>\n      </Box>\n    </>\n  );\n}\n"],"names":["schema","yup","shape","name","required","number","AddForm","onFormSubmit","onSubmit","values","resetForm","initialValues","validationSchema","className","css","Box","display","justifyContent","alignItems","position","type","placeholder","component","mt","size","fill","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleEscape","removeEventListener","event","code","createPortal","onClick","currentTarget","target","EditForm","nameToUpdate","numberToUpdate","ContactItem","id","useState","showEditForm","setShowEditForm","dispatch","useDispatch","toggleEditForm","width","color","Math","floor","random","toString","contactId","global","confirm","deleteContact","right","top","updatedContact","updateContact","ContactList","contacts","sort","a","b","localeCompare","map","Filter","value","onChange","p","Button","styled","ContactsPage","filter","useSelector","state","statePhonebook","phonebook","userName","auth","user","isLoggedIn","getContacts","handleAdd","newContact","find","contact","toLowerCase","alert","addContact","filteredContacts","includes","to","mx","px","pb","logout","py","border","borderRadius","boxShadow","backgroundColor","filterChange"],"sourceRoot":""}