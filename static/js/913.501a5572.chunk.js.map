{"version":3,"file":"static/js/913.501a5572.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/AddForm/AddForm.js","components/Modal/Modal.styled.jsx","components/Modal/Modal.js","components/EditForm/EditForm.js","components/ContactListItem/ContactListItem.styled.jsx","components/Confirm/Confirm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.js","pages/ContactsPage/ContactsPage.styled.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.js","pages/ContactsPage/ContactsPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  text-align: center;\n  width: 360px;\n  padding: 16px;\n  border: 1px solid #212121;\n  border-radius: 4px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.8);\n  background-color: white;\n\n  @media screen and (max-width: 360px) {\n    width: 100%;\n  }\n`;\n\nexport const Input = styled(Field)`\n  display: flex;\n  align-items: center;\n  margin-left: 8px;\n  padding: 4px;\n`;\n\nexport const FormBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 60px;\n  height: 60px;\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  border-radius: 50%;\n  cursor: pointer;\n  font-weight: 700;\n\n  transition: color 250ms linear, background-color 250ms linear;\n\n  :hover {\n    background-color: #ffcc00;\n    color: white;\n  }\n`;\n\nexport const ErrorStyled = styled(ErrorMessage)`\n  position: absolute;\n  bottom: 0;\n  transform: translatey(100%);\n\n  font-size: 10px;\n  background-color: white;\n  color: #212121;\n`;\n","import { HiPhone, HiUserAdd } from 'react-icons/hi';\nimport { MdOutlineDataSaverOn } from 'react-icons/md';\nimport { Box } from 'components/Box/Box';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport {\n  FormStyled,\n  Input,\n  FormBtn,\n  ErrorStyled,\n} from 'components/ContactForm/ContactForm.styled';\n\nlet schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.number().required(),\n});\n\nexport function AddForm({ toggleModalForm }) {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts);\n\n  const handleSubmit = async (newContact, { resetForm }) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n      )\n    ) {\n      alert(` ${newContact.name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact(newContact));\n    resetForm();\n    toggleModalForm();\n  };\n\n  return (\n    <Formik\n      onSubmit={handleSubmit}\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={schema}\n    >\n      <FormStyled>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Box>\n            <Box display=\"flex\" alignItems=\"center\" position=\"relative\">\n              <HiUserAdd />\n              <Input type=\"text\" name=\"name\" placeholder=\"Name\" />\n              <ErrorStyled component=\"div\" name=\"name\" />\n            </Box>\n\n            <Box display=\"flex\" alignItems=\"center\" mt={3} position=\"relative\">\n              <HiPhone />\n              <Input type=\"tel\" name=\"number\" placeholder=\"number\" />\n              <ErrorStyled component=\"div\" name=\"number\" />\n            </Box>\n          </Box>\n\n          <FormBtn type=\"submit\" aria-label=\"Add contact\">\n            <MdOutlineDataSaverOn size=\"40\" fill=\"currentColor\" />\n          </FormBtn>\n        </Box>\n      </FormStyled>\n    </Formik>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  padding-top: 8px;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.8);\n`;\n\nexport const ModalWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Overlay, ModalWrap } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, children }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleEscape);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n    };\n  });\n\n  const handleEscape = event => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdrop = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackdrop}>\n      <ModalWrap>{children}</ModalWrap>\n    </Overlay>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { HiPhone, HiUserAdd } from 'react-icons/hi';\nimport { MdSave } from 'react-icons/md';\nimport { Box } from 'components/Box/Box';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  FormStyled,\n  Input,\n  FormBtn,\n  ErrorStyled,\n} from 'components/ContactForm/ContactForm.styled';\n\nlet schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.string().required(),\n});\n\nexport function EditForm({ onFormSubmit, nameToUpdate, numberToUpdate }) {\n  const updateContact = values => {\n    onFormSubmit(values);\n  };\n\n  return (\n    <Formik\n      onSubmit={updateContact}\n      initialValues={{\n        name: nameToUpdate,\n        number: numberToUpdate,\n      }}\n      validationSchema={schema}\n    >\n      <FormStyled>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Box>\n            <Box display=\"flex\" alignItems=\"center\" position=\"relative\">\n              <HiUserAdd />\n              <Input type=\"text\" name=\"name\" placeholder=\"Name\" />\n              <ErrorStyled component=\"div\" name=\"name\" />\n            </Box>\n\n            <Box display=\"flex\" alignItems=\"center\" mt={3} position=\"relative\">\n              <HiPhone />\n              <Input type=\"tel\" name=\"number\" placeholder=\"number\" />\n              <ErrorStyled component=\"div\" name=\"number\" />\n            </Box>\n          </Box>\n\n          <FormBtn type=\"submit\" aria-label=\"Formtact\">\n            <MdSave size=\"40\" />\n          </FormBtn>\n        </Box>\n      </FormStyled>\n    </Formik>\n  );\n}\n\nEditForm.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n  nameToUpdate: PropTypes.string.isRequired,\n  numberToUpdate: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactName = styled.span`\n  margin-left: 8px;\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nexport const ContactNumber = styled.span`\n  margin: 0 4px 0 auto;\n  font-size: 14px;\n`;\n\nexport const DelBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  color: #666666;\n\n  transition: color 250ms linear;\n\n  :hover {\n    color: red;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Box } from 'components/Box/Box';\nimport { Formik } from 'formik';\nimport { FormStyled, FormBtn } from 'components/ContactForm/ContactForm.styled';\n\nexport function Confirm({ onFormSubmit, toggleConfirm, name }) {\n  return (\n    <Formik>\n      <FormStyled>\n        <p>\n          Delete contact <b>{name}</b>?\n        </p>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <FormBtn type=\"button\" aria-label=\"Cancel\" onClick={toggleConfirm}>\n            Cancel\n          </FormBtn>\n\n          <FormBtn\n            type=\"button\"\n            aria-label=\"Delete contact\"\n            onClick={onFormSubmit}\n          >\n            DELETE\n          </FormBtn>\n        </Box>\n      </FormStyled>\n    </Formik>\n  );\n}\n\nConfirm.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n  toggleConfirm: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { MdDeleteForever } from 'react-icons/md';\nimport { BsPersonCircle } from 'react-icons/bs';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport { EditForm } from 'components/EditForm/EditForm';\nimport { Box } from 'components/Box/Box';\nimport { deleteContact, updateContact } from 'redux/operations';\nimport { ContactName, ContactNumber, DelBtn } from './ContactListItem.styled';\nimport { Confirm } from 'components/Confirm/Confirm';\n\nexport function ContactListItem({ id, name, number }) {\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const dispatch = useDispatch();\n\n  const toggleEditForm = () => {\n    setShowEditForm(!showEditForm);\n  };\n\n  const toggleConfirm = () => {\n    setShowConfirm(!showConfirm);\n  };\n\n  const handleDelete = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const handleUpdate = updatedContact => {\n    dispatch(updateContact({ id, ...updatedContact }));\n    toggleEditForm();\n  };\n\n  function getRandomHexColor() {\n    return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n  }\n\n  return (\n    <>\n      <Box\n        width=\"100%\"\n        display=\"flex\"\n        onClick={toggleEditForm}\n        alignItems=\"center\"\n        p={2}\n      >\n        <BsPersonCircle size=\"20\" color={getRandomHexColor()} />\n        <ContactName>{name}</ContactName>\n        <ContactNumber>{number}</ContactNumber>\n      </Box>\n\n      <DelBtn\n        type=\"button\"\n        onClick={() => setShowConfirm(true)}\n        aria-label=\"Delete contact\"\n      >\n        <MdDeleteForever size=\"18\" />\n      </DelBtn>\n\n      {showEditForm && (\n        <Modal onClose={toggleEditForm}>\n          <EditForm\n            onFormSubmit={handleUpdate}\n            nameToUpdate={name}\n            numberToUpdate={number}\n          />\n        </Modal>\n      )}\n\n      {showConfirm && (\n        <Modal onClose={toggleConfirm}>\n          <Confirm\n            onFormSubmit={() => handleDelete(id)}\n            toggleConfirm={toggleConfirm}\n            name={name}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  padding-right: 8px;\n  color: #212121;\n  cursor: pointer;\n\n  transition: background-color 250ms linear;\n\n  :hover {\n    background-color: #fcd535;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { Item } from './ContactList.styled';\n\nexport function ContactList({ contacts }) {\n  return (\n    <ul>\n      {contacts\n        .sort((a, b) => a.name.localeCompare(b.name))\n        .map(({ id, name, number }) => (\n          <Item key={id}>\n            <ContactListItem id={id} name={name} number={number} />\n          </Item>\n        ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  display: block;\n  text-align: left;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 4px 8px;\n`;","import { Input } from './Filter.styled';\nimport { Box } from 'components/Box/Box';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterChange } from 'redux/filter';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter.filter);\n\n  const handleFilter = event => {\n    dispatch(filterChange(event.currentTarget.value));\n  };\n\n  return (\n    <Box py={1} px={2}>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilter}\n        placeholder=\"Find contact by name\"\n      />\n    </Box>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Header = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 68px;\n  background: #212121;\n  color: #ffffff;\n  z-index: 1000;\n`;\n\nexport const Container = styled.div`\n  max-width: 360px;\n  margin: 0 auto;\n`\n\nexport const Contacts = styled.div`\n  max-width: 360px;\n  margin: 0 auto;\n  background-color: #FFFFFF;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.8);\n  border-left: 1px solid #212121;\n  border-right: 1px solid #212121;\n`\n\nexport const Button = styled.button`\n  cursor: pointer;\n  /* width: 100%; */\n  padding: 4px;\n  font-size: 14px;\n  font-weight: 600;\n  border-radius: 4px;\n  border: none;\n  /* margin: 0 auto; */\n  background-color: #fcd535;\n  transition: background-color 250ms linear;\n\n  :hover,\n  :focus {\n    background-color: #ffcc00;\n  }\n\n  :focus-visible {\n    outline: none;\n  }\n`;\n\nexport const Footer = styled.div`\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 36px;\n  background: #212121;\n  color: #ffffff;\n  z-index: 1000;\n`;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  padding-top: 16px;\n  padding-bottom: 16px;\n  font-size: 16px;\n`;\n","import PropTypes from 'prop-types';\nimport { Text } from './Notification.styled';\n\nexport function Notification({ msg }) {\n  return <Text>{msg}</Text>;\n}\n\nNotification.propTypes = {\n  msg: PropTypes.string.isRequired,\n};\n","import { Box } from 'components/Box/Box';\nimport { AddForm } from 'components/AddForm/AddForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { logout } from 'redux/operations';\nimport { getContacts } from 'redux/operations';\nimport {\n  Header,\n  Container,\n  Contacts,\n  Button,\n  Footer,\n} from './ContactsPage.styled';\nimport { Notification } from 'components/Notification/Notification';\nimport Modal from 'components/Modal/Modal';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter.filter);\n  const contacts = useSelector(state => state.contacts);\n  const userName = useSelector(state => state.auth.user.name);\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const [showModalForm, setShowModalForm] = useState(false);\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  const filteredContacts = contacts\n    ? contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      )\n    : '';\n\n  const toggleModalForm = () => {\n    setShowModalForm(!showModalForm);\n  };\n\n  return (\n    <>\n      {!isLoggedIn && <Navigate to=\"/\" />}\n\n      <Header>\n        <Container>\n          <Box\n            px={2}\n            py={1}\n            display=\"flex\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n          >\n            <h4>Welcome, {userName}</h4>\n            <Button type=\"button\" onClick={() => dispatch(logout())}>\n              Logout\n            </Button>\n          </Box>\n          <Filter />\n        </Container>\n      </Header>\n\n      <Contacts>\n        {filteredContacts.length > 0 || filter ? (\n          <ContactList contacts={filteredContacts ?? []} />\n        ) : (\n          <Notification msg=\"No contacts added\" />\n        )}\n      </Contacts>\n\n      <Footer>\n        <Container>\n          <Button type=\"button\" onClick={toggleModalForm}>\n            Add Contact\n          </Button>\n        </Container>\n      </Footer>\n\n      <Box position=\"absolute\" right=\"0\" top=\"0\">\n        {showModalForm && (\n          <Modal onClose={toggleModalForm}>\n            <AddForm toggleModalForm={toggleModalForm} />\n          </Modal>\n        )}\n      </Box>\n    </>\n  );\n}\n"],"names":["FormStyled","styled","Form","Input","Field","FormBtn","ErrorStyled","ErrorMessage","schema","yup","shape","name","required","number","AddForm","toggleModalForm","dispatch","useDispatch","contacts","useSelector","state","handleSubmit","newContact","resetForm","find","contact","toLowerCase","alert","addContact","onSubmit","initialValues","validationSchema","Box","display","justifyContent","alignItems","position","type","placeholder","component","mt","size","fill","Overlay","ModalWrap","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleEscape","removeEventListener","event","code","createPortal","onClick","currentTarget","target","EditForm","onFormSubmit","nameToUpdate","numberToUpdate","values","ContactName","ContactNumber","DelBtn","Confirm","toggleConfirm","ContactListItem","id","useState","showEditForm","setShowEditForm","showConfirm","setShowConfirm","toggleEditForm","width","p","color","Math","floor","random","toString","updatedContact","updateContact","contactId","deleteContact","Item","ContactList","sort","a","b","localeCompare","map","Filter","filter","py","px","value","onChange","filterChange","Header","Container","Contacts","Button","Footer","Text","Notification","msg","ContactsPage","userName","auth","user","isLoggedIn","showModalForm","setShowModalForm","getContacts","filteredContacts","includes","to","logout","length","right","top"],"sourceRoot":""}