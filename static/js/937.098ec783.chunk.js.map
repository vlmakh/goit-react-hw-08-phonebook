{"version":3,"file":"static/js/937.098ec783.chunk.js","mappings":"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","sources":["components/AddForm/AddForm.styled.jsx","components/AddForm/AddForm.js","components/Modal/Modal.styled.jsx","components/Modal/Modal.js","components/EditForm/EditForm.styled.jsx","components/EditForm/EditForm.js","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.js","pages/ContactsPage/ContactsPage.styled.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Notification/Notification.module.css?a91f","components/Notification/Notification.js","pages/ContactsPage/ContactsPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  text-align: left;\n  width: 320px;\n  padding: 16px;\n  border: 1px solid #212121;\n  border-radius: 4px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.8);\n  background-color: white;\n`;\n\nexport const Input = styled(Field)`\n  display: flex;\n  align-items: center;\n  margin-left: 8px;\n  padding: 4px;\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 60px;\n  height: 60px;\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  border-radius: 50%;\n  cursor: pointer;\n\n  transition: color 250ms linear, background-color 250ms linear;\n\n  :hover {\n    background-color: #ffcc00;\n    color: white;\n  }\n`;\n\nexport const ErrorStyled = styled(ErrorMessage)`\n  position: absolute;\n  bottom: 0;\n  transform: translatey(100%);\n\n  font-size: 10px;\n  background-color: white;\n  color: #212121;\n`;\n","import { HiPhone, HiUserAdd } from 'react-icons/hi';\nimport { MdOutlineDataSaverOn } from 'react-icons/md';\nimport { Box } from 'components/Box/Box';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { FormStyled, Input, AddBtn, ErrorStyled } from './AddForm.styled';\n\nlet schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.number().required(),\n});\n\nexport function AddForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts);\n\n  const handleSubmit = async (newContact, { resetForm }) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n      )\n    ) {\n      alert(` ${newContact.name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact(newContact));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      onSubmit={handleSubmit}\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={schema}\n    >\n      <FormStyled>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Box>\n            <Box display=\"flex\" alignItems=\"center\" position=\"relative\">\n              <HiUserAdd />\n              <Input type=\"text\" name=\"name\" placeholder=\"Name\" />\n              <ErrorStyled component=\"div\" name=\"name\" />\n            </Box>\n\n            <Box display=\"flex\" alignItems=\"center\" mt={3} position=\"relative\">\n              <HiPhone />\n              <Input type=\"tel\" name=\"number\" placeholder=\"number\" />\n              <ErrorStyled component=\"div\" name=\"number\" />\n            </Box>\n          </Box>\n\n          <AddBtn type=\"submit\" aria-label=\"Add contact\">\n            <MdOutlineDataSaverOn size=\"40\" fill=\"currentColor\" />\n          </AddBtn>\n        </Box>\n      </FormStyled>\n    </Formik>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  padding-top: 8px;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;  \n  background-color: rgba(0, 0, 0, 0.8);\n`;\n\nexport const ModalWrap = styled.div`\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Overlay, ModalWrap } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, children }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleEscape);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n    };\n  });\n\n  const handleEscape = event => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdrop = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackdrop}>\n      <ModalWrap>{children}</ModalWrap>\n    </Overlay>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  text-align: left;\n  width: 320px;\n  padding: 16px;\n  border: 1px solid #212121;\n  border-radius: 4px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.8);\n  background-color: white;\n`;\n\nexport const Input = styled(Field)`\n  display: flex;\n  align-items: center;\n  margin-left: 8px;\n  padding: 4px;\n`;\n\nexport const SaveBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 60px;\n  height: 60px;\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  border-radius: 50%;\n  cursor: pointer;\n\n  transition: color 250ms linear, background-color 250ms linear;\n\n  :hover {\n    background-color: #ffcc00;\n    color: white;\n  }\n`;\n\nexport const ErrorStyled = styled(ErrorMessage)`\n  position: absolute;\n  bottom: 0;\n  transform: translatey(100%);\n\n  font-size: 10px;\n  background-color: white;\n  color: #FF0000;\n`;\n","import PropTypes from 'prop-types';\nimport { HiPhone, HiUserAdd } from 'react-icons/hi';\nimport { MdSave } from 'react-icons/md';\nimport { Box } from 'components/Box/Box';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { FormStyled, Input, SaveBtn, ErrorStyled } from './EditForm.styled';\n\nlet schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.string().required(),\n});\n\nexport function EditForm({ onFormSubmit, nameToUpdate, numberToUpdate }) {\n  const updateContact = values => {\n    onFormSubmit(values);\n  };\n\n  return (\n    <Formik\n      onSubmit={updateContact}\n      initialValues={{\n        name: nameToUpdate,\n        number: numberToUpdate,\n      }}\n      validationSchema={schema}\n    >\n      <FormStyled>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Box>\n            <Box display=\"flex\" alignItems=\"center\" position=\"relative\">\n              <HiUserAdd />\n              <Input type=\"text\" name=\"name\" placeholder=\"Name\" />\n              <ErrorStyled component=\"div\" name=\"name\" />\n            </Box>\n\n            <Box display=\"flex\" alignItems=\"center\" mt={3} position=\"relative\">\n              <HiPhone />\n              <Input type=\"tel\" name=\"number\" placeholder=\"number\" />\n              <ErrorStyled component=\"div\" name=\"number\" />\n            </Box>\n          </Box>\n\n          <SaveBtn type=\"submit\" aria-label=\"Save contact\">\n            <MdSave size=\"40\" />\n          </SaveBtn>\n        </Box>\n      </FormStyled>\n    </Formik>\n  );\n}\n\nEditForm.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n  nameToUpdate: PropTypes.string.isRequired,\n  numberToUpdate: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactName = styled.span`\n  margin-left: 8px;\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nexport const ContactNumber = styled.span`\n  margin: 0 4px 0 auto;\n  font-size: 14px;\n`;\n\nexport const DelBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  color: #666666;\n\n  transition: color 250ms linear;\n\n  :hover {\n    color: red;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { MdDeleteForever } from 'react-icons/md';\nimport { BsPersonCircle } from 'react-icons/bs';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport { EditForm } from 'components/EditForm/EditForm';\nimport { Box } from 'components/Box/Box';\nimport { deleteContact, updateContact } from 'redux/operations';\nimport { ContactName, ContactNumber, DelBtn } from './ContactListItem.styled';\n\nexport function ContactListItem({ id, name, number }) {\n  const [showEditForm, setShowEditForm] = useState(false);\n  const dispatch = useDispatch();\n\n  const toggleEditForm = () => {\n    setShowEditForm(!showEditForm);\n  };\n\n  const handleDelete = contactId => {\n    if (global.confirm('Delete contact?')) {\n      dispatch(deleteContact(contactId));\n    }\n  };\n\n  const handleUpdate = updatedContact => {\n    dispatch(updateContact({ id, ...updatedContact }));\n    toggleEditForm();\n  };\n\n  function getRandomHexColor() {\n    return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n  }\n\n  return (\n    <>\n      <Box\n        width=\"100%\"\n        display=\"flex\"\n        onClick={toggleEditForm}\n        alignItems=\"center\"\n        p={2}\n      >\n        <BsPersonCircle size=\"20\" color={getRandomHexColor()} />\n        <ContactName>{name}</ContactName>\n        <ContactNumber>{number}</ContactNumber>\n      </Box>\n\n      <DelBtn\n        type=\"button\"\n        onClick={() => handleDelete(id)}\n        aria-label=\"Delete contact\"\n      >\n        <MdDeleteForever size=\"18\" />\n      </DelBtn>\n\n      <Box position=\"absolute\" right=\"0\" top=\"0\">\n        {showEditForm && (\n          <Modal onClose={toggleEditForm}>\n            <EditForm\n              onFormSubmit={handleUpdate}\n              nameToUpdate={name}\n              numberToUpdate={number}\n            />\n          </Modal>\n        )}\n      </Box>\n    </>\n  );\n}\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  padding-right: 8px;\n  color: #212121;\n  cursor: pointer;\n\n  transition: background-color 250ms linear;\n\n  :hover {\n    background-color: #fcd535;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { Item } from './ContactList.styled';\n\nexport function ContactList({ contacts }) {\n  return (\n    <ul>\n      {contacts\n        .sort((a, b) => a.name.localeCompare(b.name))\n        .map(({ id, name, number }) => (\n          <Item key={id}>\n            <ContactListItem id={id} name={name} number={number} />\n          </Item>\n        ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  display: block;\n  text-align: left;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 4px 8px;\n`;","import { Input } from './Filter.styled';\nimport { Box } from 'components/Box/Box';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterChange } from 'redux/filter';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter.filter);\n\n  const handleFilter = event => {\n    dispatch(filterChange(event.currentTarget.value));\n  };\n\n  return (\n    <Box p={2}>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilter}\n        placeholder=\"Find contact by name\"\n      />\n    </Box>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  cursor: pointer;\n  /* width: 100%; */\n  padding: 4px ;\n  font-size: 14px;\n  font-weight: 600;\n  border-radius: 4px;\n  border: none;\n  /* margin: 0 auto; */\n  background-color: #fcd535;\n  transition: background-color 250ms linear;\n\n  :hover,:focus {\n    background-color: #ffcc00;\n  }\n\n\n  :focus-visible {\n    outline: none;\n  }\n`;","// extracted by mini-css-extract-plugin\nexport default {\"msgText\":\"Notification_msgText__Ij0Ua\"};","import PropTypes from 'prop-types';\nimport css from './Notification.module.css';\n\nexport function Notification({ msg }) {\n  return <p className={css.msgText}>{msg}</p>;\n}\n\nNotification.propTypes = {\n  msg: PropTypes.string.isRequired,\n};\n","import { Box } from 'components/Box/Box';\nimport { AddForm } from 'components/AddForm/AddForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { logout } from 'redux/operations';\nimport { getContacts } from 'redux/operations';\nimport { Button } from './ContactsPage.styled';\nimport { Notification } from 'components/Notification/Notification';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter.filter);\n  const contacts = useSelector(state => state.contacts);\n  const userName = useSelector(state => state.auth.user.name);\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  const filteredContacts = contacts\n    ? contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      )\n    : '';\n\n  return (\n    <>\n      {!isLoggedIn && <Navigate to=\"/\" />}\n\n      <Box width=\"320px\" mx=\"auto\" position=\"relative\">\n        <Box px={2} pb={2} display=\"flex\" justifyContent=\"space-between\">\n          <h4>Welcome, {userName}</h4>\n          <Button type=\"button\" onClick={() => dispatch(logout())}>\n            Logout\n          </Button>\n        </Box>\n\n        <AddForm />\n\n        <Box\n          py={2}\n          mt={2}\n          border=\"1px solid #212121\"\n          borderRadius={3}\n          boxShadow=\"0px 4px 8px rgba(0, 0, 0, 0.8)\"\n          backgroundColor=\"white\"\n        >\n          {filteredContacts.length > 0 || filter ? (\n            <Filter />\n          ) : (\n            <Notification msg=\"No contacts added\" />\n          )}\n\n          <ContactList contacts={filteredContacts ?? []} />\n        </Box>\n      </Box>\n    </>\n  );\n}\n"],"names":["FormStyled","styled","Form","Input","Field","AddBtn","ErrorStyled","ErrorMessage","schema","yup","shape","name","required","number","AddForm","dispatch","useDispatch","contacts","useSelector","state","handleSubmit","newContact","resetForm","find","contact","toLowerCase","alert","addContact","onSubmit","initialValues","validationSchema","Box","display","justifyContent","alignItems","position","type","placeholder","component","mt","size","fill","Overlay","ModalWrap","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleEscape","removeEventListener","event","code","createPortal","onClick","currentTarget","target","SaveBtn","EditForm","onFormSubmit","nameToUpdate","numberToUpdate","values","ContactName","ContactNumber","DelBtn","ContactListItem","id","useState","showEditForm","setShowEditForm","toggleEditForm","width","p","color","Math","floor","random","toString","contactId","global","confirm","deleteContact","right","top","updatedContact","updateContact","Item","ContactList","sort","a","b","localeCompare","map","Filter","filter","value","onChange","filterChange","Button","Notification","msg","className","css","ContactsPage","userName","auth","user","isLoggedIn","getContacts","filteredContacts","includes","to","mx","px","pb","logout","py","border","borderRadius","boxShadow","backgroundColor","length"],"sourceRoot":""}