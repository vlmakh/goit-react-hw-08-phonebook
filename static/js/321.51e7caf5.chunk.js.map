{"version":3,"file":"static/js/321.51e7caf5.chunk.js","mappings":"yPAYIA,EAASC,EAAAA,KAAaC,MAAM,CAC9BC,MAAOF,EAAAA,KAAaE,QAAQC,WAC5BC,SAAUJ,EAAAA,KAAaG,aAGV,SAASE,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC,KAAD,CACEC,SAPiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BJ,GAASK,EAAAA,EAAAA,IAAMF,IACfC,GACD,EAKGE,cAAe,CACbV,MAAO,GACPE,SAAU,IAEZS,iBAAkBd,EANpB,UAQE,UAAC,KAAD,YACE,UAAC,KAAD,CAAOe,QAAQ,QAAf,WACE,qCACA,SAAC,KAAD,CAAaC,KAAK,QAAQC,KAAK,OAAOC,YAAY,OAClD,SAAC,KAAD,CAAgBC,UAAU,MAAMH,KAAK,cAGvC,UAAC,KAAD,CAAOD,QAAQ,WAAf,WACE,yCACA,SAAC,KAAD,CACEC,KAAK,WACLC,KAAK,WACLC,YAAY,IACZE,aAAa,SAEf,SAAC,KAAD,CAAgBD,UAAU,MAAMH,KAAK,iBAGvC,SAAC,KAAD,CAAQC,KAAK,SAAb,uBAIP,C,kMCrDYI,EAASC,EAAAA,EAAAA,OAAH,wWAsBNC,GAAaD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,kJASVG,GAAcH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,4FAQXK,EAAQL,EAAAA,EAAAA,MAAH,uHAOLM,GAAiBN,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,4K","sources":["components/Login/Login.js","components/Login/Login.styled.jsx"],"sourcesContent":["import {\n  Button,\n  StyledForm,\n  StyledField,\n  Label,\n  StyledErrorMsg,\n} from './Login.styled';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/operations';\nimport * as yup from 'yup';\n\nlet schema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().required(),\n});\n\nexport default function Login() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(login(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      onSubmit={handleSubmit}\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={schema}\n    >\n      <StyledForm>\n        <Label htmlFor=\"email\">\n          <span>email</span>\n          <StyledField name=\"email\" type=\"text\" placeholder=\" \"></StyledField>\n          <StyledErrorMsg component=\"div\" name=\"email\" />\n        </Label>\n\n        <Label htmlFor=\"password\">\n          <span>password </span>\n          <StyledField\n            name=\"password\"\n            type=\"password\"\n            placeholder=\" \"\n            autoComplete=\"off\"\n          ></StyledField>\n          <StyledErrorMsg component=\"div\" name=\"password\" />\n        </Label>\n\n        <Button type=\"submit\">Login</Button>\n      </StyledForm>\n    </Formik>\n  );\n}\n","import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Button = styled.button`\n  cursor: pointer;\n  width: 100%;\n  padding: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  border-radius: 4px;\n  border: none;\n  margin: 0 auto;\n  background-color: #fcd535;\n  transition: background-color 250ms linear;\n\n  :hover,:focus {\n    background-color: #ffcc00;\n  }\n\n\n  :focus-visible {\n    outline: none;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  padding: 16px 24px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n\n  height: 248px;\n`;\n\nexport const StyledField = styled(Field)`\n  padding: 4px 8px;\n\n  :focus-visible {\n    outline: none;\n  }\n`;\n\nexport const Label = styled.label`\nposition: relative;\n  display: flex;\n  justify-content: space-between;\n  font-weight: 600;\n`;\n\nexport const StyledErrorMsg = styled(ErrorMessage)`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  transform: translatey(100%);\n  font-size: 10px;\n  background-color: white;\n  color: #212121;\n`;\n"],"names":["schema","yup","shape","email","required","password","Login","dispatch","useDispatch","onSubmit","values","resetForm","login","initialValues","validationSchema","htmlFor","name","type","placeholder","component","autoComplete","Button","styled","StyledForm","Form","StyledField","Field","Label","StyledErrorMsg","ErrorMessage"],"sourceRoot":""}